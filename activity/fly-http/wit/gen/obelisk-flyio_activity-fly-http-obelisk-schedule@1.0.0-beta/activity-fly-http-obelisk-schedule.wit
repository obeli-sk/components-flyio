// Generated by Obelisk 0.26.2
package obelisk-flyio:activity-fly-http-obelisk-schedule@1.0.0-beta;

interface apps {
  use obelisk-flyio:activity-fly-http/apps@1.0.0-beta.{app};
  use obelisk:types/execution@3.0.0.{execution-id};
  use obelisk:types/time@3.0.0.{schedule-at};

  get-schedule: func(schedule-at: schedule-at, app-name: string) -> execution-id;

  put-schedule: func(schedule-at: schedule-at, org-slug: string, app-name: string) -> execution-id;

  list-schedule: func(schedule-at: schedule-at, org-slug: string) -> execution-id;

  delete-schedule: func(schedule-at: schedule-at, app-name: string, force: bool) -> execution-id;
}

interface volumes {
  use obelisk-flyio:activity-fly-http/regions@1.0.0-beta.{region};
  use obelisk-flyio:activity-fly-http/volumes@1.0.0-beta.{volume, volume-create-request};
  use obelisk:types/execution@3.0.0.{execution-id};
  use obelisk:types/time@3.0.0.{schedule-at};

  type volume-id = string;

  list-schedule: func(schedule-at: schedule-at, app-name: string) -> execution-id;

  create-schedule: func(schedule-at: schedule-at, app-name: string, request: volume-create-request) -> execution-id;

  get-schedule: func(schedule-at: schedule-at, app-name: string, volume-id: volume-id) -> execution-id;

  extend-schedule: func(schedule-at: schedule-at, app-name: string, volume-id: volume-id, new-size-gb: u32) -> execution-id;

  delete-schedule: func(schedule-at: schedule-at, app-name: string, volume-id: volume-id) -> execution-id;
}

interface machines {
  use obelisk-flyio:activity-fly-http/regions@1.0.0-beta.{region};
  use obelisk-flyio:activity-fly-http/volumes@1.0.0-beta.{volume-id};
  use obelisk-flyio:activity-fly-http/machines@1.0.0-beta.{machine-state, host-status, mount, cpu-kind, guest-config, restart-policy, machine-restart, init-config, stop-config, exec-response, service-protocol, port-handler, port-config, service-config, machine-config, machine};
  use obelisk:types/execution@3.0.0.{execution-id};
  use obelisk:types/time@3.0.0.{schedule-at};

  type machine-id = string;

  list-schedule: func(schedule-at: schedule-at, app-name: string) -> execution-id;

  get-schedule: func(schedule-at: schedule-at, app-name: string, machine-id: machine-id) -> execution-id;

  create-schedule: func(schedule-at: schedule-at, app-name: string, machine-name: string, machine-config: machine-config, region: option<region>) -> execution-id;

  update-schedule: func(schedule-at: schedule-at, app-name: string, machine-id: machine-id, machine-config: machine-config, region: option<region>) -> execution-id;

  suspend-schedule: func(schedule-at: schedule-at, app-name: string, machine-id: machine-id) -> execution-id;

  stop-schedule: func(schedule-at: schedule-at, app-name: string, machine-id: machine-id) -> execution-id;

  start-schedule: func(schedule-at: schedule-at, app-name: string, machine-id: machine-id) -> execution-id;

  restart-schedule: func(schedule-at: schedule-at, app-name: string, machine-id: machine-id) -> execution-id;

  delete-schedule: func(schedule-at: schedule-at, app-name: string, machine-id: machine-id, force: bool) -> execution-id;

  exec-schedule: func(schedule-at: schedule-at, app-name: string, machine-id: machine-id, command: list<string>) -> execution-id;

  exec-check-success-schedule: func(schedule-at: schedule-at, app-name: string, machine-id: machine-id, command: list<string>) -> execution-id;
}

interface secrets {
  use obelisk-flyio:activity-fly-http/secrets@1.0.0-beta.{secret};
  use obelisk:types/execution@3.0.0.{execution-id};
  use obelisk:types/time@3.0.0.{schedule-at};

  list-schedule: func(schedule-at: schedule-at, app-name: string) -> execution-id;

  delete-schedule: func(schedule-at: schedule-at, app-name: string, secret-name: string) -> execution-id;
}

interface ips {
  use obelisk-flyio:activity-fly-http/regions@1.0.0-beta.{region};
  use obelisk-flyio:activity-fly-http/ips@1.0.0-beta.{ipv4-config, ipv6-config, ip-variant, ip-request, ip-detail};
  use obelisk:types/execution@3.0.0.{execution-id};
  use obelisk:types/time@3.0.0.{schedule-at};

  type ip-address = string;

  allocate-unsafe-schedule: func(schedule-at: schedule-at, app-name: string, request: ip-request) -> execution-id;

  list-schedule: func(schedule-at: schedule-at, app-name: string) -> execution-id;

  release-schedule: func(schedule-at: schedule-at, app-name: string, ip: ip-address) -> execution-id;
}


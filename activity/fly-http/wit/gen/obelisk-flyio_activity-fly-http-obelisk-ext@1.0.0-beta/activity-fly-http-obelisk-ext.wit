// Generated by Obelisk 0.26.2
package obelisk-flyio:activity-fly-http-obelisk-ext@1.0.0-beta;

interface apps {
  use obelisk-flyio:activity-fly-http/apps@1.0.0-beta.{app};
  use obelisk:types/execution@3.0.0.{execution-id, join-set, await-next-extension-error, get-extension-error, invoke-extension-error};

  get-submit: func(join-set: borrow<join-set>, app-name: string) -> execution-id;

  get-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<option<app>, string>>, await-next-extension-error>;

  get-get: func(execution-id: execution-id) -> result<result<option<app>, string>, get-extension-error>;

  get-invoke: func(label: string, app-name: string) -> result<result<option<app>, string>, invoke-extension-error>;

  put-submit: func(join-set: borrow<join-set>, org-slug: string, app-name: string) -> execution-id;

  put-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<app, string>>, await-next-extension-error>;

  put-get: func(execution-id: execution-id) -> result<result<app, string>, get-extension-error>;

  put-invoke: func(label: string, org-slug: string, app-name: string) -> result<result<app, string>, invoke-extension-error>;

  list-submit: func(join-set: borrow<join-set>, org-slug: string) -> execution-id;

  list-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<list<app>, string>>, await-next-extension-error>;

  list-get: func(execution-id: execution-id) -> result<result<list<app>, string>, get-extension-error>;

  list-invoke: func(label: string, org-slug: string) -> result<result<list<app>, string>, invoke-extension-error>;

  delete-submit: func(join-set: borrow<join-set>, app-name: string, force: bool) -> execution-id;

  delete-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  delete-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  delete-invoke: func(label: string, app-name: string, force: bool) -> result<result<_, string>, invoke-extension-error>;
}

interface volumes {
  use obelisk-flyio:activity-fly-http/regions@1.0.0-beta.{region};
  use obelisk-flyio:activity-fly-http/volumes@1.0.0-beta.{volume, volume-create-request};
  use obelisk:types/execution@3.0.0.{execution-id, join-set, await-next-extension-error, get-extension-error, invoke-extension-error};

  type volume-id = string;

  list-submit: func(join-set: borrow<join-set>, app-name: string) -> execution-id;

  list-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<list<volume>, string>>, await-next-extension-error>;

  list-get: func(execution-id: execution-id) -> result<result<list<volume>, string>, get-extension-error>;

  list-invoke: func(label: string, app-name: string) -> result<result<list<volume>, string>, invoke-extension-error>;

  create-submit: func(join-set: borrow<join-set>, app-name: string, request: volume-create-request) -> execution-id;

  create-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<volume, string>>, await-next-extension-error>;

  create-get: func(execution-id: execution-id) -> result<result<volume, string>, get-extension-error>;

  create-invoke: func(label: string, app-name: string, request: volume-create-request) -> result<result<volume, string>, invoke-extension-error>;

  get-submit: func(join-set: borrow<join-set>, app-name: string, volume-id: volume-id) -> execution-id;

  get-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<volume, string>>, await-next-extension-error>;

  get-get: func(execution-id: execution-id) -> result<result<volume, string>, get-extension-error>;

  get-invoke: func(label: string, app-name: string, volume-id: volume-id) -> result<result<volume, string>, invoke-extension-error>;

  extend-submit: func(join-set: borrow<join-set>, app-name: string, volume-id: volume-id, new-size-gb: u32) -> execution-id;

  extend-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  extend-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  extend-invoke: func(label: string, app-name: string, volume-id: volume-id, new-size-gb: u32) -> result<result<_, string>, invoke-extension-error>;

  delete-submit: func(join-set: borrow<join-set>, app-name: string, volume-id: volume-id) -> execution-id;

  delete-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  delete-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  delete-invoke: func(label: string, app-name: string, volume-id: volume-id) -> result<result<_, string>, invoke-extension-error>;
}

interface machines {
  use obelisk-flyio:activity-fly-http/regions@1.0.0-beta.{region};
  use obelisk-flyio:activity-fly-http/volumes@1.0.0-beta.{volume-id};
  use obelisk-flyio:activity-fly-http/machines@1.0.0-beta.{machine-state, host-status, mount, cpu-kind, guest-config, restart-policy, machine-restart, init-config, stop-config, exec-response, service-protocol, port-handler, port-config, service-config, machine-config, machine};
  use obelisk:types/execution@3.0.0.{execution-id, join-set, await-next-extension-error, get-extension-error, invoke-extension-error};

  type machine-id = string;

  list-submit: func(join-set: borrow<join-set>, app-name: string) -> execution-id;

  list-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<list<machine>, string>>, await-next-extension-error>;

  list-get: func(execution-id: execution-id) -> result<result<list<machine>, string>, get-extension-error>;

  list-invoke: func(label: string, app-name: string) -> result<result<list<machine>, string>, invoke-extension-error>;

  get-submit: func(join-set: borrow<join-set>, app-name: string, machine-id: machine-id) -> execution-id;

  get-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<option<machine>, string>>, await-next-extension-error>;

  get-get: func(execution-id: execution-id) -> result<result<option<machine>, string>, get-extension-error>;

  get-invoke: func(label: string, app-name: string, machine-id: machine-id) -> result<result<option<machine>, string>, invoke-extension-error>;

  create-submit: func(join-set: borrow<join-set>, app-name: string, machine-name: string, machine-config: machine-config, region: option<region>) -> execution-id;

  create-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<string, string>>, await-next-extension-error>;

  create-get: func(execution-id: execution-id) -> result<result<string, string>, get-extension-error>;

  create-invoke: func(label: string, app-name: string, machine-name: string, machine-config: machine-config, region: option<region>) -> result<result<string, string>, invoke-extension-error>;

  update-submit: func(join-set: borrow<join-set>, app-name: string, machine-id: machine-id, machine-config: machine-config, region: option<region>) -> execution-id;

  update-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  update-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  update-invoke: func(label: string, app-name: string, machine-id: machine-id, machine-config: machine-config, region: option<region>) -> result<result<_, string>, invoke-extension-error>;

  suspend-submit: func(join-set: borrow<join-set>, app-name: string, machine-id: machine-id) -> execution-id;

  suspend-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  suspend-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  suspend-invoke: func(label: string, app-name: string, machine-id: machine-id) -> result<result<_, string>, invoke-extension-error>;

  stop-submit: func(join-set: borrow<join-set>, app-name: string, machine-id: machine-id) -> execution-id;

  stop-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  stop-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  stop-invoke: func(label: string, app-name: string, machine-id: machine-id) -> result<result<_, string>, invoke-extension-error>;

  start-submit: func(join-set: borrow<join-set>, app-name: string, machine-id: machine-id) -> execution-id;

  start-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  start-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  start-invoke: func(label: string, app-name: string, machine-id: machine-id) -> result<result<_, string>, invoke-extension-error>;

  restart-submit: func(join-set: borrow<join-set>, app-name: string, machine-id: machine-id) -> execution-id;

  restart-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  restart-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  restart-invoke: func(label: string, app-name: string, machine-id: machine-id) -> result<result<_, string>, invoke-extension-error>;

  delete-submit: func(join-set: borrow<join-set>, app-name: string, machine-id: machine-id, force: bool) -> execution-id;

  delete-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  delete-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  delete-invoke: func(label: string, app-name: string, machine-id: machine-id, force: bool) -> result<result<_, string>, invoke-extension-error>;

  exec-submit: func(join-set: borrow<join-set>, app-name: string, machine-id: machine-id, command: list<string>) -> execution-id;

  exec-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<exec-response, string>>, await-next-extension-error>;

  exec-get: func(execution-id: execution-id) -> result<result<exec-response, string>, get-extension-error>;

  exec-invoke: func(label: string, app-name: string, machine-id: machine-id, command: list<string>) -> result<result<exec-response, string>, invoke-extension-error>;

  exec-check-success-submit: func(join-set: borrow<join-set>, app-name: string, machine-id: machine-id, command: list<string>) -> execution-id;

  exec-check-success-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<exec-response, string>>, await-next-extension-error>;

  exec-check-success-get: func(execution-id: execution-id) -> result<result<exec-response, string>, get-extension-error>;

  exec-check-success-invoke: func(label: string, app-name: string, machine-id: machine-id, command: list<string>) -> result<result<exec-response, string>, invoke-extension-error>;
}

interface secrets {
  use obelisk-flyio:activity-fly-http/secrets@1.0.0-beta.{secret};
  use obelisk:types/execution@3.0.0.{execution-id, join-set, await-next-extension-error, get-extension-error, invoke-extension-error};

  list-submit: func(join-set: borrow<join-set>, app-name: string) -> execution-id;

  list-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<list<secret>, string>>, await-next-extension-error>;

  list-get: func(execution-id: execution-id) -> result<result<list<secret>, string>, get-extension-error>;

  list-invoke: func(label: string, app-name: string) -> result<result<list<secret>, string>, invoke-extension-error>;

  delete-submit: func(join-set: borrow<join-set>, app-name: string, secret-name: string) -> execution-id;

  delete-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  delete-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  delete-invoke: func(label: string, app-name: string, secret-name: string) -> result<result<_, string>, invoke-extension-error>;
}

interface ips {
  use obelisk-flyio:activity-fly-http/regions@1.0.0-beta.{region};
  use obelisk-flyio:activity-fly-http/ips@1.0.0-beta.{ipv4-config, ipv6-config, ip-variant, ip-request, ip-detail};
  use obelisk:types/execution@3.0.0.{execution-id, join-set, await-next-extension-error, get-extension-error, invoke-extension-error};

  type ip-address = string;

  allocate-unsafe-submit: func(join-set: borrow<join-set>, app-name: string, request: ip-request) -> execution-id;

  allocate-unsafe-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<ip-address, string>>, await-next-extension-error>;

  allocate-unsafe-get: func(execution-id: execution-id) -> result<result<ip-address, string>, get-extension-error>;

  allocate-unsafe-invoke: func(label: string, app-name: string, request: ip-request) -> result<result<ip-address, string>, invoke-extension-error>;

  list-submit: func(join-set: borrow<join-set>, app-name: string) -> execution-id;

  list-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<list<ip-detail>, string>>, await-next-extension-error>;

  list-get: func(execution-id: execution-id) -> result<result<list<ip-detail>, string>, get-extension-error>;

  list-invoke: func(label: string, app-name: string) -> result<result<list<ip-detail>, string>, invoke-extension-error>;

  release-submit: func(join-set: borrow<join-set>, app-name: string, ip: ip-address) -> execution-id;

  release-await-next: func(join-set: borrow<join-set>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  release-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  release-invoke: func(label: string, app-name: string, ip: ip-address) -> result<result<_, string>, invoke-extension-error>;
}

